package mocks

import config "tes/config"
import ga4gh_task_ref "tes/server/proto"

import mock "github.com/stretchr/testify/mock"

// GCEClient is an autogenerated mock type for the GCEClient type
type GCEClient struct {
	mock.Mock
}

// StartWorker provides a mock function with given fields: project, zone, id, conf
func (_m *GCEClient) StartWorker(project string, zone string, id string, conf config.Worker) error {
	ret := _m.Called(project, zone, id, conf)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string, string, config.Worker) error); ok {
		r0 = rf(project, zone, id, conf)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Template provides a mock function with given fields: project, id
func (_m *GCEClient) Template(project string, id string) (*ga4gh_task_ref.Resources, error) {
	ret := _m.Called(project, id)

	var r0 *ga4gh_task_ref.Resources
	if rf, ok := ret.Get(0).(func(string, string) *ga4gh_task_ref.Resources); ok {
		r0 = rf(project, id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ga4gh_task_ref.Resources)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(project, id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
