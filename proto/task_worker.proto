
syntax = "proto3";

package ga4gh_task_ref;

import "task_execution.proto";

/**
 * Worker Info
 */
message WorkerInfo {
  string id = 1;         /// UUID of the worker
  int64  last_ping = 2;  /// Last time contacted
  string hostname  = 3;
}

message JobRequest {
  WorkerInfo worker = 1;
  ga4gh_task_exec.Resources resources = 2;
}

message JobResponse {
  ga4gh_task_exec.Job job = 1;
  string auth = 2;
}

message UpdateStatusRequest {
  string id = 1;
  int64 step = 2;
  ga4gh_task_exec.JobLog log = 4;
  string worker_id = 5;
}

message QueuedTaskInfoRequest {
  int32 max_tasks = 1;
}

message QueuedTaskInfo {
  repeated string inputs = 1;
  ga4gh_task_exec.Resources resources = 2;
}

message JobCompleteRequest {
  string id = 1;
  // TODO this could be inferred from the job logs exit code
  bool failed = 2;
}

message JobCompleteResponse {
}

message Worker {
  string id = 1;
  repeated string active_jobs = 2;
  repeated string queued_jobs = 3;
}


/**
 * Scheduler Service
 */
service Scheduler {
  rpc GetQueueInfo(QueuedTaskInfoRequest) returns(stream QueuedTaskInfo) {};
  rpc GetJobToRun(JobRequest) returns (JobResponse) {};
  rpc UpdateJobStatus(UpdateStatusRequest) returns (ga4gh_task_exec.JobID) {};
  rpc JobComplete(JobCompleteRequest) returns (JobCompleteResponse) {};
  rpc WorkerPing(WorkerInfo) returns (WorkerInfo) {};
  rpc GetJobState(ga4gh_task_exec.JobID) returns (ga4gh_task_exec.JobDesc) {};
}
